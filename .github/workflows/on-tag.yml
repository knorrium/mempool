name: Docker build on tag
env:
  DOCKER_CLI_EXPERIMENTAL: enabled
  TAG_FMT: '^refs/tags/(((.?[0-9]+){3,4}))$'
  DOCKER_BUILDKIT: 0
  COMPOSE_DOCKER_CLI_BUILD: 0

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-*

jobs:
  build:
    strategy:
      matrix:
        service:
          - backend
    runs-on: ubuntu-18.04
    name: Build and push to DockerHub
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Set GitHub Short Sha
        id: vars-sha
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
      - name: Check GitHub Short Sha
        run: echo ${{ steps.vars-sha.outputs.sha_short }}

      - name: Set TAG
        id: vars-tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      
      - name: Check TAG
        run: echo ${{ steps.vars-tag.outputs.tag }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        id: qemu

      - name: Init repo for Dockerization
        run: | 
          ls
          echo "change perms"
          chmod +x ./docker/init.sh
          echo "run init"
          ./docker/init.sh ${{ env.GIT_TAG }}
          ls frontend
          ls backend
          echo "ls again"
          pwd
        shell: bash
        env:
          GIT_TAG: ${{ steps.vars-tag.outputs.tag }}

      - name: Setup Docker buildx action
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          buildkitd-flags: "--debug"

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        id: build
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: |
            ${{ github.repository_owner }}/$$ matrix.service}}:${{ steps.vars-tag.outputs.tag }}, ${{ github.repository_owner }}/$$ matrix.service}}:${{ steps.vars-tag.outputs.tag }}:latest
          build-args: |
            commitHash=${{ steps.vars-sha.outputs.sha_short }}
          cache-from: type=gha,scope=docker-${{ matrix.service }}-${{ github.workflow }}-${{ github.job }}-${{ runner.os }}-v1
          cache-to: type=gha,mode=max,scope=docker-${{ matrix.service }}-${{ github.workflow }}-${{ github.job }}-${{ runner.os }}-v1
